---
layout: null
---

%html
  %head
    %title Michael Dalessio
    %link{:href => "resume.css", :rel => "stylesheet", :type => "text/css", :media => "screen, print"}
    %meta{:content => "application/html;charset=utf-8", "http-equiv" => "Content-type"}

  %body
    %div.info
      %div.title Michael Dalessio

      %table
        %tr
          %td 
            %a{:href => "http://mike.daless.io"} http://mike.daless.io
          %td
            %a{:href => "mailto:mike.dalessio@gmail.com"} mike.dalessio@gmail.com
          %td New York / New Jersey

      %div.statement
        :markdown
          I write code for a living, but I also do it for fun.
          I've had success as an executive, a manager, and a technical lead.
          I encourage [agile software development practices](https://www.amazon.com/Extreme-Programming-Explained-Embrace-Change/dp/0321278658)
          which emphasize early and continuous delivery of valuable software.
          I try to always respect the humanity of the people who must collaborate well in order to build excellent products.

    %div.section
      %div.title TL;DR

      %div.section
        %div.title Technology Skills

        %dl
          %dt Distributed systems
          %dd
            After working on Cloud Foundry for a few years, I know
            some things about developing, operating, and maintaining a
            distributed computing platform, and about the interesting
            emergent behavior you see when the platform is put under
            stress.

          %dt Ruby.
          %dd
            I love Ruby, though I'm comfortable in many other
            languages. In Ruby, I have experience writing language
            extensions in C, Java, and FFI (dynamic bindings).

          %dt
            C, C++, STL.
          %dd
            I've done large-scale OO design and implementation. I have
            experience writing portable code for platforms old and new.

          %dt Web development with Rails and Javascript.
          %dd
            :markdown
              I've successfully deployed highly-available data-intensive web
              applications supporting multiple (read: _old_) browsers.

          %dt High performance parallel computing.
          %dd
            I've got experience with PVM and MPI toolkits. I've
            hand-rolled data serialization as well as used libraries like
            protobuf and ASN.1/BER. I've built a fault tolerant load
            balancer and implemented job scheduling algorithms.

          %dt System-level programming.
          %dd
            I've got experience with threaded and evented processing
            models. I'm familiar with various methods of IPC, including
            message queues and sockets.  I've done network programming on
            both *nix and Windows using TCP and UDP.

          %dt Linux system administration.
          %dd
            Notably, I've performed this role on large compute clusters,
            though it was quite a few years ago.

          %dt Debugging and profiling.
          %dd
            My go-to tools include strace, valgrind, gdb, gprof,
            gperftools and wireshark.

          %dt FORTRAN.
          %dd
            Yes, I've got deep knowledge of FORTRAN, having integrated
            it with C and C++ at the source level and at linktime. No,
            I don't expect this to ever be useful again.

          %dt Other languages.
          %dd
            I've been known to write Golang, Java Lisp, Clojure, and
            Scala in addition to what's listed above; though I
            wouldn't claim to be an expert in any of them.

            I've got extensive scripting experience, primarily in Ruby,
            Perl and bash.

      %div.section
        %div.title Organizational and Human Skills

        %dl
          %dt Team Building.
          %dd
            I've had success hiring and managing strong development
            teams, and improving existing teams.

          %dt Framework Building.
          %dd
            I've designed and built application frameworks to deliver
            complex functionality to domain-expert
            developers. Notably, I designed and built the OO framework
            used by Bloomberg to build Launchpad.

          %dt Technology Integration.
          %dd
            I've successfully dealt with technology integration issues
            such as consensus, training, documentation and inertial
            resistance while meeting business demands.

          %dt Mentoring.
          %dd
            I'm able to mentor developers in technology and design,
            both in an informal office setting and in formal training
            classes. I'm also an experienced technical trainer, having
            run many large "developer boot camps".

          %dt Client management.
          %dd
            I've got years of experience working with clients of all
            sizes in a variety of verticals. I know that everything
            works better when people trust and respect each other.

          %dt Financial and Energy Markets.
          %dd
            I have experience building trading systems for equity and
            fixed income financial markets, and for energy
            markets. I'm also comfortable with bond math and the FI
            derivative market.

          %dt Figuring It Out.
          %dd
            :markdown
              I can read `man` pages. I know what an RFC is. I like
              reading other people's code.

          %dt Mad Communication Skillz.
          %dd
            Me talk good. Me also write good. Me so funny.


    %div.section
      %div.title Curriculum Vit&aelig;

      %div.section
        %div.title Professional Experience

        %div.job
          %div.title
            :markdown
              Director of Engineering @ [Shopify](https://shopify.com) (June 2020 &mdash; Present)

          %div.joblet.only
            %div.description
              Led the Ruby and Rails Infrastructure team, dedicated to making Ruby and Rails
              100-year tools. Part of the Developer Acceleration team.

        %div.job
          %div.title
            :markdown
              VP, Engineering @ [VMware](http://pivotal.io/platform-as-a-service/pivotal-cloud-foundry) (via acquisition, Dec 2019 &mdash; June 2020)

          %div.joblet
            %div.description
              Led the Tanzu "Modern Application" R&D team of 400+
              engineers worldwide on Cloud Foundry and related
              Kubernetes and Data Services products.

          %div.joblet
            %div.description
              Led the "Culture Workstream" during integration to help
              everyone understand ourselves and how we fit into the
              broader VMware corporate culture.

        %div.job
          %div.title
            :markdown
              VP, Engineering @ [Pivotal Cloud Foundry](http://pivotal.io/platform-as-a-service/pivotal-cloud-foundry) (Oct 2016 &mdash; Dec 2019)

          %div.title
            :markdown
              Engineering Director @ [Pivotal Cloud Foundry](http://pivotal.io/platform-as-a-service/pivotal-cloud-foundry) (July 2014 &mdash; Sept 2016)

          %div.joblet
            %div.description
              Wore many hats to help the Pivotal Cloud Foundry
              engineering organization scale out to 80+ teams
              in eight cities across eight timezones.
            %div.learned
              Learned how to grow a healthy people-first organization
              capable of sustainably delivering excellent software
              products.

          %div.joblet
            %div.description
              :markdown
                For the [CF Foundation](http://cloudfoundry.org/about/index.html), led two OSS [Project Management Committees](http://cloudfoundry.org/pdfs/CFF_Development_Governance.pdf): Buildpacks, and Developer Tools.
            %div.learned
              Learned to appreciate how hard it is to build an
              open-source foundation, and keep the big tent big.

        %div.job
          %div.title
            :markdown
              Director @ [Pivotal Labs](http://pivotallabs.com) NYC (Sept 2012 &mdash; July 2014)

          %div.joblet.only
            %div.description
              As the business owner of the NYC consulting practice for
              Pivotal Labs, was responsible for all aspects of revenue
              and headcount.
            %div.learned
              Learned how to have uncomfortable conversations. Learned
              how to make decisions based on incomplete
              information. Learned how to run a sales
              pipeline. Learned how to run a hiring
              pipeline. Learned how to be a business owner.

        %div.job
          %div.title
            :markdown
              Director of Technology @ [Benchmark Solutions](http://www.bloomberg.com/research/stocks/private/snapshot.asp?privcapId=46774241) (Feb 2010 &mdash; Aug 2012)

          %div.joblet.only
            %div.description
              Managed and was technical lead for frontend team (web and
              native Windows client), realtime data
              infrastructure team, and the reference data team.
            %div.learned
              I'm still not sure what I learned here; we can get a beverage and discuss it, though.

        %div.job
          %div.title
            :markdown
              Director and Agile Software Developer @ [Pivotal Labs](http://pivotallabs.com) (Nov 2008 &mdash; Feb 2010)

          %div.joblet
            %div.description
              Director, NYC consulting business. (Sept 2009 &mdash; Feb 2010)
            %div.learned
              Learned how to feed and care for awesome
              developers. Learned that pair-interviewing is the best
              way to determine a developer's skill level and fitness.

          %div.joblet
            %div.description
              Agile Software Developer. (Nov 2008 &mdash; Sept 2009)
            %div.learned
              Learned the value of pair-programming, and where it's
              most effective. Learned the value of
              test-driving. Learned Agile and XP
              methodologies. Learned how to aggressively
              refactor. Learned what a sustainable development process
              looks like.

        %div.job
          %div.title
            :markdown
              Founding Partner @ [Pharos Enterprise Intelligence](http://www.pharos-ei.com) (Jan 2008 &mdash; Dec 2018)

          %div.joblet
            %div.description
              Architect and lead developer for a turn-key Energy Management System.
            %div.learned
              :markdown
                Learned how critical the "minimum viable product" is
                to success. Learned how important an early-alpha
                client is to success. Learned how unimportant
                long-term planning often is to success. Learned how
                important it is to choose the right business partner.

        %div.job
          %div.title
            :markdown
              Director of Application Development @ [USPOWERGEN](http://www.uspowergen.com/) (May 2006 &mdash; Dec 2007)

          %div.joblet
            %div.description
              System architect and lead developer for an Energy Management System.
            %div.learned
              Learned that developer efficiency is the most important
              thing for a startup. Learned how to write Ruby
              extensions in C. Learned how to scrape data. Learned how
              robust and awesome the Ruby open-source community is.

          %div.joblet
            %div.description
              Directory of Technology across multiple power plants.
            %div.learned
              Learned what the M&A due diligence process looks
              like. Learned how an integration projects can turn into
              a train wreck. Levelled up in dealing with office
              politics. Learned how challenging it is to have to write
              and enforce corporate IT policies. Learned how
              time-consuming regulatory audits are (SOX 404 and NERC
              Cybersecurity). Learned how to manage a cap-ex budget.

        %div.job
          %div.title
            Head of Software Development @ ASPEED Software (Aug 2004 &mdash; Apr 2006)

          %div.joblet
            %div.description
              Managed a team of developers building SDKs for parallel computing on large clusters.
            %div.learned
              Learned how to demo a product. Learned how to present to
              business stakeholders. Learned how to quickly set up a
              sane development environment. Learned how to set up sane
              customer support.

          %div.joblet
            %div.description
              Assisted clients in parallelizing applications (Professional Services).
            %div.learned
              Learned how build a static code analyzer. Learned how to
              read and use profiler output. Learned how to support
              customers. Learned what a sane deployment process looks
              like. Learned how to read complicated legacy code.

          %div.joblet
            %div.description
              Lead developer on parallel-computing SDK.
            %div.learned
              :markdown
                Learned that the USPTO will [grant software patents on practically anything](http://www.google.com/patents/US7328194).
                Learned how to build a load-balancer. Learned how to administer large clusters.
                Learned how to serialize data efficiently.
                Learned how to implement efficient, portable network code.

        %div.job
          %div.title
            Infrastructure Applications Lead @ Moneyline/Telerate (Nov 2003 &mdash; Aug 2004)

          %div.joblet
            %div.description
              Managed a team porting applications to a new pub/sub API as the last phase of a ticker plant rollout.
            %div.learned
              Learned that smart developers, without business context,
              invariably work on the wrong problems. Learned that
              projects get shut down if they don't deliver business
              value early-and-often.

          %div.joblet
            %div.description
              Managed a team of offshore developers building an internal application for browsing ticker plant data.
            %div.learned
              Learned why managing offshore developers is hard.

          %div.joblet
            %div.description
              Implemented a high-performance UDP feed to integrate third-party data vendors.
            %div.learned
              Learned about multicast networking. Learned how to do
              I/O using a threaded model, and why it's hard (harder
              than it should be) to do right.

        %div.job
          %div.title
            :markdown
              Chief Architect for Bloomberg Launchpad @ [Bloomberg, L.P.](http://www.bloomberg.com) (Jun 1995 &mdash; Aug 2003)

          %div.joblet
            %div.description
              Extended the Launchpad OO platform to provide services, like pub/sub, IPC and
              instant messaging. (2002 &mdash; 2003)
            %div.learned
              Learned how to lead a collaborative team of
              high-performing developers. Learned that customer IT
              policies are complicated. Learned the value of enabling
              developers to do complex things without specialized
              knowledge.

          %div.joblet
            %div.description
              :markdown
                Designed, built, and led development on __Bloomberg Launchpad__,
                the next-gen Bloomberg UI. (2001 &mdash; 2003)
            %div.learned
              Learned how to implement malloc. Learned that mmap
              rules. Learned how C++ and FORTRAN program
              initialization work. Learned how to implement a
              polymorphic OO type system in C. Learned that leveraging
              open source is a really, really good idea. Learned the
              power of targetting a known interface (GTK+) to a
              completely new technology (Bloomberg Win32). Learned why
              building specialized debugging tools are sometimes
              necessary. Learned that office politics can ruin a good
              time.

          %div.joblet
            %div.description
              :markdown
                Designed and built the __Trading Systems Desktop ("TW")__
                using the new Bloomberg UI (Win32 controls). (1997 &mdash; 2001)

            %div.learned
              Learned the value of providing policy on top of
              mechanism. Learned that it's possible to make a system
              do things it wasn't designed to do, and that it's a
              hallmark of good design. Learned how a lack of developer
              frameworks can slow forward progress for even talented
              developers. Learned to love building developer tools.

          %div.joblet
            %div.description
              Helped integrate C into a land of FORTRAN. (1997 &mdash; 1998)
            %div.learned
              Learned how the call stack works. Learned how linkers
              work. Learned that some technologists are secretly
              Luddites.

          %div.joblet
            %div.description
              Built and maintained a set of customer-facing TCP/IP feeds. (1997 &mdash; 2000)
            %div.learned
              Learned networking the hard way. Learned the art of
              abstraction. Learned why meta-programming rules.

          %div.joblet
            %div.description
              Coordinated and taught the Bloomberg "boot camp"
              developer training classes. (1996 &mdash; 2000)
            %div.learned
              Learned how to speak in front of an audience of
              developers. Learned how to teach. Learned how to
              distinguish developers with whom I'd like to work.

          %div.joblet
            %div.description
              Wrangled a huge time-series dataset. (1995 &mdash; 1999)
            %div.learned
              Learned how to be coherent on a 3AM phone call. Learned
              to be careful and how to plan. Learned that some query
              optimizers do bizarre and unpredictable things.



      %div.section
        %div.title Undergraduate Experience

        %div.job
          %div.title
            NASA Space Telescope Science Institute (1993 &mdash; 1995)

          %div.joblet.only
            %div.description
              Research assistant to Dr. Rex Saffer.
            %div.learned
              Learned FORTRAN and bash. Learned how to
              parallel-process big jobs across a cluster.  Learned
              that raw data is often noisy. Learned that minimizing an
              objective function with many dimensions using noisy data
              is hard. Learned that meta-knowledge is often more
              important than knowledge. Learned that you have to love
              what you do to be good at it.

        %div.job
          %div.title
            Rowland Department of Physics @ The Johns Hopkins University (1993 &mdash; 1995)

          %div.joblet.only
            %div.description
              Research assistant to Dr. Doyle T. Hall.
            %div.learned
              Learned Emacs. Learned how to learn a language from its
              reference manual. Learned how to build 3-D graphic
              visualizations. Learned how to catch a hacker.

        %div.job
          %div.title
            Rowland Department of Physics @ The Johns Hopkins University (1992 &mdash; 1993)

          %div.joblet.only
            %div.description
              Assistant System and Network Administrator for the Department of Physics and Astronomy.
            %div.learned
              Learned that *nix rules. Learned how networks work, the
              hard way. Learned how to disassemble and fix a
              computer. Learned how to run a data center.

      %div.section
        %div.title Education

        %div.job
          %div.title The Johns Hopkins University (Sept 1991 &mdash; May 1995)

          %div.joblet
            %div.description Graduated with a B.A. in Physics.
            %div.learned
              Learned to focus intensely. Learned to think
              logically. Learned to seize the day. Learned to love
              writing code. Learned how to learn.


    %div.section
      %div.title Volunteer Work

      %div.job
        %div.title
          :markdown
            Co-organizer of [GORUCO](http://goruco.com/) (2015 &mdash; 2017)

        GORUCO is the premier NYC regional Ruby conference, convening annually since 2007.

    %div.section
      %div.title Open Source Experience

      %div.job
        %div.title
          :markdown
            Co-Author of [nokogiri](http://nokogiri.org)

        Nokogiri is currently the most popular XML/HTML parsing library for Ruby developers. It
        supports CSS and XPath querying, has push and pull SAX parsers, validates DTD and XSD
        schemas, performs XSLT transformations, and has a very simple and usable API. It's
        implemented in Ruby, C and Java.

      %div.job
        %div.title
          :markdown
            Author and Maintainer of [loofah](https://rubygems.org/gems/loofah) and [loofah-activerecord](https://rubygems.org/gems/loofah-activerecord)

        Loofah is the default HTML sanitizer in Rails, which can be used to prevent cross-site
        scripting (XSS) attacks. It provides a variety of methods to clean or remove unsafe HTML,
        and delivers ActiveRecord plugins for Rails applications.

      %div.job
        %div.title
          :markdown
            Co-Maintainer of [rails-html-sanitizer](https://github.com/rails/rails-html-sanitizer)

        Rails HTML Sanitizer is the default library for sanitizing HTML fragments in Rails applications.

      %div.job
        %div.title
          :markdown
            Co-Maintainer of [mechanize](https://rubygems.org/gems/mechanize)

        Mechanize is a Ruby library used for automating website interaction and screen-scraping. It
        fully supports browser history and cookies, and allows easy authentication and form
        submission.

      %div.section
        %div.title Selected Smaller Projects and Contributions

        :markdown

          * Maintainer of [mini_portile](https://github.com/flavorjones/mini_portile), a tool to
            help library developers declare and use autoconf packages as dependencies.

          * Co-maintainer of
            [rake-compiler-dock](https://github.com/rake-compiler/rake-compiler-dock), a tool to
            provide cross-compiling environments for binary Ruby gems.

          * Contributor to [the Ruby language](https://www.ruby-lang.org/en/).

          * Contributor to [Ruby on Rails](https://rubyonrails.org/) and a member of that project's
            Triage team.

          * Contributor to [libxml2](https://gitlab.gnome.org/GNOME/libxml2/-/wikis/home), a
            foundational library used widely for parsing and manipulating XML and HTML markup.

          * Contributor to [rdoc](https://github.com/ruby/rdoc), the default documentation system
            for the Ruby ecosystem.

          * Contributor to [git](http://git-scm.com), an open-source distributed version control
            system.

          * Contributor to [ruby-ffi](https://github.com/ffi/ffi), Ruby's Foreign Function Interface
            project, which allows Ruby extensions to run on the JVM (JRuby).

          * Author of [chromedriver-helper](https://rubygems.org/gems/chromedriver-helper), a
            now-retired project to make installation of chromedriver dead simple for integration
            test suites.

          * Co-author of [hoe-debugging](https://rubygems.org/gems/hoe-debugging), a Hoe plugin to
            run gdb and valgrind on your Ruby C extensions.

          * Author of [hoe-gemspec](https://rubygems.org/gems/hoe-gemspec) and
            [hoe-bundler](https://rubygems.org/gems/hoe-bundler), Hoe plugins to help developers
            manage dependencies and release candidates.

          * Co-author of [ActiveHash](https://rubygems.org/gems/active_hash), a project to create
            ActiveRecord-like models with Hash- or file-based readonly datasources.
